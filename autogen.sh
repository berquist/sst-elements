#!/bin/bash

if [ -z $LIBTOOLIZE ] ; then
    LIBTOOLIZE=$(type -P libtoolize)
    if [ -z $LIBTOOLIZE ] ; then
        LIBTOOLIZE=$(type -P glibtoolize)
    fi
fi
if [ -z $LIBTOOL ] ; then
    LIBTOOL=$(type -P "${LIBTOOLIZE%???}")
fi

if [ -z $LIBTOOL ] || [ -z $LIBTOOLIZE ] ; then
    echo "Unable to find working libtool. [$LIBTOOL][$LIBTOOLIZE]"
    exit 1
fi

# Make a new Makefile.am in src
BASE_DIR=`pwd`

echo "AC_DEFUN([SST_ELEMENT_CONFIG_OUTPUT], [" > config/sst_elements_config_output.m4
echo "dnl Automatically generated by SST configuration system" > config/sst_elements_include.m4

ignored_list=
added_make_list=
added_m4_list=

elements_base_dir="${BASE_DIR}/src/sst/elements"
# Look at the the directories in the elements subdir
for element_name in `ls ${elements_base_dir}`; do
    element_dir="${elements_base_dir}/${element_name}"

	if [ -d "${element_dir}" ]; then
	    
        # Testing for .ignore and its associated .unignore settings
        if test -f "${element_dir}/.ignore" -a ! -f "${element_dir}/.unignore" ; then
            ignored_list="$ignored_list $element_name"
        elif test -f "${element_dir}/.ignore" && \
             test -s ${element_dir}/.unignore && \
             test -z "`grep $USER $$element_dir/.unignore`" ; then
          ignored_list="$ignored_list $element_name"
        else
            
            # See if we have a config.m4 in the element directory
            if [ -r "${element_dir}/configure.m4" ]; then
                echo "   SST_${element_name}_CONFIG([config_${element_name}=1],[config_${element_name}=0])" >> config/sst_elements_config_output.m4
                echo "   AS_IF([test \$config_${element_name} -eq 1], [active_element_libraries=\"\$active_element_libraries ${element_name}\"])" >> config/sst_elements_config_output.m4
                echo "m4_include([src/sst/elements/${element_name}/configure.m4])" >> config/sst_elements_include.m4
                added_m4_list="$added_m4_list ${element_name}"
            else
                if [ -r "${element_dir}/Makefile.am" ]; then
                    echo "   active_element_libraries=\"\$active_element_libraries ${element_name}\"" >> config/sst_elements_config_output.m4
                    added_make_list="$added_make_list ${element_name}"
                fi
            fi
            
            if [ -r "${element_dir}/Makefile.am" ]; then
                echo "   AC_CONFIG_FILES([src/sst/elements/${element_name}/Makefile])" >> config/sst_elements_config_output.m4
                if [ ! -f "${element_dir}/.nodist" ]; then
                    echo "   dist_element_libraries=\"\$dist_element_libraries ${element_name}\"" >> config/sst_elements_config_output.m4
                else
                    echo "   AC_MSG_WARN([Element library ]${element_name}[ will build, but will not be distributed.])"  >> config/sst_elements_config_output.m4
                    echo 
                    echo "***WARNING: Element library ${element_name} will build, but will not be distributed via make dist due to .nodist file in directory."
                fi
            fi
            echo "   " >> config/sst_elements_config_output.m4
	    fi
	fi
done

echo '   SST_ACTIVE_ELEMENT_LIBRARIES="$active_element_libraries"' >> config/sst_elements_config_output.m4
echo '   SST_DIST_ELEMENT_LIBRARIES="$dist_element_libraries"' >> config/sst_elements_config_output.m4
echo "   AC_SUBST(SST_ACTIVE_ELEMENT_LIBRARIES)" >> config/sst_elements_config_output.m4
echo "   AC_SUBST(SST_DIST_ELEMENT_LIBRARIES)" >> config/sst_elements_config_output.m4
echo "])" >> config/sst_elements_config_output.m4

# Output our findings
echo
echo "Included Element Libraries via Makefile in src/sst/elements/"
echo "========================================================="
for i in $added_make_list ; do echo "    $i" ; done
echo
echo "Included Element Libraries via config.m4 files in src/sst/elements/"
echo "========================================================="
for i in $added_m4_list ; do echo "    $i" ; done
echo
echo "Ignored Element Libraries in src/sst/elements/"
echo "========================================================="
for i in $ignored_list ; do echo "    $i" ; done
echo
echo "========================================================="
echo "========================================================="
echo 

echo "Generating configure files..."
# Delete the old libtool output
rm -rf libltdl src/libltdl

echo "Running ${LIBTOOLIZE}..."
$LIBTOOLIZE --automake --copy --ltdl

if test -d libltdl; then
        echo "Moving libltdl to src .."
        mv libltdl ./src/
fi

if test ! -d src/libltdl ; then
    echo "libltdl for elements exist.  Aborting."
    exit 1
fi

aclocal -I config
autoheader
autoconf
automake --foreign --add-missing --include-deps
autoreconf --force --install
